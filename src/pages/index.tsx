import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '../../styles/Home.module.css'
import * as THREE from 'three';
import {useEffect, useRef} from "react";
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';

const inter = Inter({ subsets: ['latin'] })

let count = 0;
function graphics() {
  if(count++ >= 1) return
  console.info('graphics')

  const renderer = new THREE.WebGLRenderer();
  renderer.setClearColor( 0x050503 );
  renderer.setPixelRatio( window.devicePixelRatio );
  renderer.setSize( window.innerWidth, window.innerHeight );
  document.body.appendChild( renderer.domElement );

  const   camera = new THREE.PerspectiveCamera(
      75,
      window.innerWidth / window.innerHeight,
      0.25,
      200
  );
  camera.position.set(0, 0, 30);

  const scene = new THREE.Scene();

  const material = new THREE.LineBasicMaterial( { color: 0xff00ff } );
  const points = [];
  points.push( new THREE.Vector3( - 10, 0, 0 ) );
  points.push( new THREE.Vector3( 0, 10, 0 ) );
  points.push( new THREE.Vector3( 10, 0, 0 ) );
  const geometry = new THREE.BufferGeometry().setFromPoints( points );
  const line = new THREE.Line( geometry, material );
  scene.add( line );

  const loader = new GLTFLoader();

  loader.load(     "/sketchfab-ftm-0970f30574d047b1976ba0aa6f2ef855/scene.gltf", function ( gltf ) {
    scene.add( gltf.scene );
    renderer.render( scene, camera );
  }, undefined, function ( error ) {
    console.error( error );
  } );

  loader.load( '/sketchfab_taiwan_style_signboard_lowpoly/scene.gltf', function ( gltf ) {
    gltf.scene.scale.set(1,1,1)
    scene.add( gltf.scene );
    renderer.render( scene, camera );

  }, undefined, function ( error ) {

    console.error( error );

  } );

}

export default function Home() {
  useEffect(() => graphics(), [])

  return (
    <>
      <Head>
        <title>Three.js training</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <canvas/>
      </main>
    </>
  )
}
